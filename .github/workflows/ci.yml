name: Python application

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version
      - name: Install dependencies
        run: |
          poetry install --no-interaction --all-groups
      - name: Run tests
        run: |
          poetry run coverage run -m pytest test/unit
          echo "Code coverage report:"
          poetry run coverage report
  release:
    runs-on: ubuntu-latest
    name: Create release and upload artifacts
    needs: [unit_tests]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version
      - name: Get version from pyproject.toml
        run: |
          echo "VERSION=$(poetry version -s)" >> $GITHUB_ENV
      - name: Build package
        run: |
          poetry install --no-interaction
          poetry build
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: "Automated release for version v${{ env.VERSION }}"
          files: |
            dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
